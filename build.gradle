plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'io.github.i-vrnv'
version = getVersionFromGit()

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.wiremock.integrations:wiremock-spring-boot:3.6.0'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('bootJar') {
	archiveFileName.set("app.jar") // Указываем имя JAR-файла
}

def getVersionFromGit() {
	String versionProperty = "release"
	if (project.hasProperty(versionProperty) && !project.property(versionProperty).toString().trim().isEmpty()) {
		return project.property(versionProperty).toString()
	}
	
	try {
		def stdout = new ByteArrayOutputStream()
		exec {
			commandLine "git", "describe", "--tags", "--always", "--dirty"
			standardOutput = stdout
			ignoreExitValue = true
		}
		def version = stdout.toString().trim()
		return version.isEmpty() ? "0.0.1-SNAPSHOT" : version.replaceFirst("^v", "")
	} catch (Exception e) {
		println "Failed to get version from git: ${e.message}. Using default version."
		return "0.0.1-SNAPSHOT"
	}
}
